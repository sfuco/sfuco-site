// components.scss
// Contains classes that are used in multiple document sections/pages

@import 'global_variables';

// A menu that appears when you hover over a dropdown container
.dropdown-submenu {
    width: 100%;
    position: absolute;
    top: 100%;
    left: 0;
    padding: 5px 0;
    background-color: rgba($grey,0.9);
    opacity: 0;
    transition:opacity linear 0.15s;

    ul {
        padding: 0;
        text-align: center;
    }
    li {
        display: block;
        a {
            color: $white;
            font-size: 24px; /* Based on h1 size of 36px */
        }
    }
}

// A collection of elements that are dynamically arranged
// on the page.
.flex-container {
  display: flex;
  flex-wrap: wrap;
}

.flex-element {
  max-width: 200px;
  max-height: 200px;
  margin: 3px;
  position: relative;
}

// CSS-Grid
.grid-container { // CSS-Grid container
  display: grid;
}

// A container for imgs with an overlay
// (Takes on the width and height of its parent container
// usually, a flex-element)
.image-container {
  width: 100%;
  height: 100%;

  img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
}

.hover-overlay { // Usually goes inside an .image-container
  width: 100%;
  height: 100%;
  position: absolute;
  display: none; // Turned on by a trigger
  z-index: 2;
  opacity: 0.7;
  background-color: $grey;
}

// An <img class="img-overlay"> will
// be invisible until hovered over
// Used to show transformation between one image into another on hover
// It's a variation on .hover-overlay
// e.g. place an <img class="img-overlay"> of a colored
// img above a black and white one - hovering over it
// will transform the b&w one to colored
// Note: both imgs should be in a <div class="img-overlay-container">
.img-overlay {
  position: absolute;
  opacity: 0;
  transition: opacity .05s ease-in;
}

.img-overlay-container:hover .img-overlay {
  opacity: 1;
  transition: opacity .25s ease-out;
}

// Container for individual news posts
// [Element should also be a .grid-container]
.news-item {
  height: 150px;
  margin: 15px 0;
  overflow: visible; // Necessary for slide out effect
  box-shadow: 0 2px 3px rgba($grey2, 0.5);
  grid-template-columns: repeat(3, 1fr);
  grid-template-areas: "img text text";
}
@media (min-width: $MED_WIDTH){
  .news-item {height: 300px;}
}

.news-item-img {
  width: 110%;
  background-size: cover;
  background-repeat: no-repeat;
  background-position: left;
  position: relative;
  z-index: 1;
  grid-area: img;
}
.news-item-content {
  padding: 15px;
  background-color: white;
  box-shadow: -2px 0 1px rgba($grey2, 0.1);
  position: relative;
  z-index: 2;
  grid-area: text;
}

// Formatted text for .news-items
.news-text {
  span {
    font-size: 0.75rem;
  }
  p {
    font-size: 1rem;
    display: none; // Hidden for small devices
  }
  @media(min-width: $MED_WIDTH) {
    p {
      display: block;
    }
  }
}

/// Misc classes

.background-shading {
  width: 75%;
  height: 75%;
  position: absolute;
  top: -5%;
  left: 5%;
  background-color: rgba($grey2, 0.1);
}
